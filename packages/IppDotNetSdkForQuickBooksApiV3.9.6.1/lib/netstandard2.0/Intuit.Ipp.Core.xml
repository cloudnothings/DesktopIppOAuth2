<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intuit.Ipp.Core</name>
    </assembly>
    <members>
        <member name="T:Intuit.Ipp.Core.Rest.AdvancedLogging">
            <summary>
            Contains properties used to indicate whether request and response messages are to be logged.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AdvancedLogging.serviceRequestLoggingLocationForFile">
            <summary>
            request logging location.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AdvancedLogging.serviceRequestAzureDocumentDBUrl">
            <summary>
            request Azure Document DB url.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AdvancedLogging.serviceRequestAzureDocumentDBSecureKey">
            <summary>
            request Azure Document DB Secure Key
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.ServiceRequestAzureDocumentDBTTL">
            <summary>
            request TTL-time to live for all logs 
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.EnableSerilogRequestResponseLoggingForDebug">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Debug logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.EnableSerilogRequestResponseLoggingForTrace">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Trace logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.EnableSerilogRequestResponseLoggingForConsole">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Console logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.EnableSerilogRequestResponseLoggingForRollingFile">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Rolling logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.EnableSerilogRequestResponseLoggingForAzureDocumentDB">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Azure Doc DB logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AdvancedLogging.ServiceRequestLoggingLocationForFile">
            <summary>
            Gets or sets the service request logging location for File, Rolling File.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AdvancedLogging.log">
            <summary>
            Serilog Logger
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AdvancedLogging.#ctor">
            <summary>
            Initializes a new instance of AdvanceLogging
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AdvancedLogging.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of Advanced logger
            </summary>
            <param name="enableSerilogRequestResponseLoggingForDebug"></param>
            <param name="enableSerilogRequestResponseLoggingForTrace"></param>
            <param name="enableSerilogRequestResponseLoggingForConsole"></param>
            <param name="enableSerilogRequestResponseLoggingForRollingFile"></param>
            <param name="serviceRequestLoggingLocationForFile"></param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AdvancedLogging.Log(System.String)">
            <summary>
            Logging message from SDK
            </summary>
            <param name="messageToWrite"></param>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.IRestHandler">
            <summary>
            IRestHandler contains the methods for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response as streamn by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk">
            <summary>
            Logs API Requests/Responses To Disk
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk"/> class.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk"/> class.
            </summary>
            <param name="enableServiceRequestLogging">Value indicating whether to log request response messages.</param>
            <param name="serviceRequestLoggingLocation">Request Response logging locationl</param>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.LogRequestsToDisk.EnableServiceRequestsLogging">
            <summary>
            Gets a value indicating whether Service Requests Logging should be enabled.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.LogRequestsToDisk.ServiceRequestLoggingLocation">
            <summary>
            Gets the Service Request Logging Location.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.LogPlatformRequests(System.String,System.Boolean)">
            <summary>
            Logs the Platform Request to Disk.
            </summary>
            <param name="xml">The xml to log.</param>
            <param name="isRequest">Specifies whether the xml is request or response.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.AsyncRestHandler">
            <summary>
            RestRequestHandler contains the logic for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AsyncRestHandler.requestBody">
            <summary>
            Request Body.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AsyncRestHandler.context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.AsyncRestHandler"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.AsyncRestHandler"/> class from being created.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.Core.Rest.AsyncRestHandler.OnCallCompleted">
            <summary>
            Callback event.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AsyncRestHandler.IsSyncRequestStream">
            <summary>
            Gets the value which indicates not to set the request body of the http web request.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAtuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecAsyncRequestWithRetryPolicy(System.Net.HttpWebRequest)">
            <summary>
            Executes the Asynchronous Request.
            </summary>
            <param name="asyncRequest">Asynchronous web request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecuteServiceCallAsync(System.Net.HttpWebRequest)">
            <summary>
            Executes the Service Call using the Retry Policy.
            </summary>
            <param name="myRequest">Http Request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.CreateEventArgsForException(System.Exception)">
            <summary>
            Creates the Event Args for Exception/Fault responses from server.
            </summary>
            <param name="exception">The exception class.</param>
            <returns>Async CallCompletedEvent Arguments.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.CreateEventArgsForRequest(System.IAsyncResult)">
            <summary>
            Creates the Event Args for success responses from server.
            </summary>
            <param name="asyncResult">The IAsynResult.</param>
            <returns>Async CallCompletedEvent Arguments.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ConvertResponseStreamToBytes(System.IO.Stream)">
            <summary>
            Gets a response stream and returns them as byte array.
            </summary>
            <param name="responseStream">Stream from web response</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecAsyncRequest(System.Net.HttpWebRequest)">
            <summary>
            Executes the Asynchronous Request.
            </summary>
            <param name="asyncRequest">Asynchronous web request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.AsyncExecutionCompleted(System.IAsyncResult)">
            <summary>
            Call back method for Find all entities  Asynchronously 
            </summary>
            <param name="result">Asynchronous Result.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetRequestStreamCallback(System.IAsyncResult)">
            <summary>
            Callback for GetRequestStream.
            </summary>
            <param name="asynchronousResult">Asynchronous Result.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.HandleErrors(System.String)">
            <summary>
            Check the response for any errors it might indicate. Will throw an exception if API response indicates an error.
            Will throw an exception if it has a problem determining success or error.
            </summary>
            <param name="responseXml">the QuickBase response to examine</param>
            <returns>Asyn Call Completed Arguments.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.EncodingFixer">
            <summary>
            Helps repair encoding of QuickBase responses.
            </summary>
            <seealso cref="M:Intuit.Ipp.Core.Rest.EncodingFixer.FixQuickBaseEncoding(System.Byte[])"/>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.EncodingFixer.Replacements">
            <summary>
            A list of characters for which QuickBase always uses Windows-1252 encoding. For use in FixQuickBaseEncoding().
            "LEFT DOUBLE QUOTATION MARK"
            "RIGHT DOUBLE QUOTATION MARK"
            "EN DASH"
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.EncodingFixer.FixQuickBaseEncoding(System.Byte[])">
            <summary>
            QuickBase has a unique feature which converts certain input characters into windows-1252 encoding and stores them in the database
            (This assists Windows users when they use QuickBase HTML UI). When data containing such characters is queried, 
            the windows-1252 encoding will not change and will remain surrounded by the usual UTF8-encoded XML.
            If this data requires XML parsing, the windows-1252 encoded characters have to be re-encoded to UTF8 encoding.
            This unique feature was recently removed from appcenter, but still exists in QuickBase.
            </summary>
            <param name="encodedValue">a response from QuickBase that's mostly UTF8 encoded but has Windows-1252-encoded characters embedded in it</param>
            <returns>Returns the encoded response.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.FaultHandler">
            <summary>
            Handles the fault tags in the response and handles them.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.FaultHandler.context">
            <summary>
            The Service Context.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.FaultHandler"/> class.
            </summary>
            <param name="context">The service context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.FaultHandler"/> class from being created.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ParseResponseAndThrowException(System.Net.WebException,System.Boolean)">
            <summary>
            Parses the Response and throws appropriate exceptions.
            </summary>
            <param name="webException">Web Exception.</param>
            <param name="isIps">Specifies whether the exception is generated by an IPS call.</param>
            <returns>Ids Exception.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ParseErrorResponseAndPrepareException(System.String)">
            <summary>
            Parses the error response and prepares the response.
            </summary>
            <param name="errorString">The error string.</param>
            <returns>Ids Exception.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ExtractFaultFromResponse(System.String)">
            <summary>
            Extracts the Fault from the Error Response.
            </summary>
            <param name="errorString">The error string.</param>
            <returns>Fault object.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.IterateFaultAndPrepareException(Intuit.Ipp.Data.Fault)">
            <summary>
            Iterates Fault and Prepares the Exception.
            </summary>
            <param name="fault">Fault object.</param>
            <returns>Ids exception.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.RequestParameters">
            <summary>
            Parameters for calling Rest calls.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RequestParameters.#ctor(System.String,Intuit.Ipp.Core.HttpVerbType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RequestParameters"/> class.
            </summary>
            <param name="resourceUri">The resource URI.</param>
            <param name="verb">The http verb.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RequestParameters.#ctor(System.String,Intuit.Ipp.Core.HttpVerbType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RequestParameters"/> class.
            </summary>
            <param name="resourceUri">The resource URI.</param>
            <param name="verb">The http verb.</param>
            <param name="contentType">Type of the content.</param>
            <param name="apiName">Name of the API.</param>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ResourceUri">
            <summary>
            Gets the resource URI.
            </summary>
            <value>
            The resource URI.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.Verb">
            <summary>
            Gets the verb.
            </summary>
            <value>
            The http verb.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ApiName">
            <summary>
            Gets the name of the API.
            </summary>
            <value>
            The name of the API.
            </value>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.RestHandler">
            <summary>
            Rest Handler class.
            </summary>
            <seealso cref="T:Intuit.Ipp.Core.Rest.RestHandler"/>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.RestHandler.serviceContext">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.RestHandler.responseSerializer">
            <summary>
            Response serializer.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RestHandler"/> class.
            </summary>
            <param name="context">The Service Context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RestHandler"/> class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.IsSyncRequestStream">
            <summary>
            Gets a value indicating whether to write to request stream or not.
            For async requests GetRequestStream is an async operation.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestCompressor">
            <summary>
            Gets or sets Request compressor.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.ResponseCompressor">
            <summary>
            Gets or sets Response compressor.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestSerializer">
            <summary>
            Gets or sets Request serializer.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestLogging">
            <summary>
            Gets or sets Request Logging.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.MinorVersion">
            <summary>
            Gets or sets the minorVersion.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.Include">
            <summary>
            Gets or sets the Include param.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestId">
            <summary>
            Gets or sets the requestId param.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.SyncRestHandler">
            <summary>
            SyncRestHandler contains the logic for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.SyncRestHandler.context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.SyncRestHandler"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.SyncRestHandler"/> class from being created.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.SyncRestHandler.IsSyncRequestStream">
            <summary>
            Gets the value which indicates to set the request body of the http web request.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth reqeust uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.CallRestService(System.Net.HttpWebRequest)">
            <summary>
            Calls the rest service.
            </summary>
            <param name="request">The request.</param>
            <returns>Returns the response.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetRestServiceCallResponseStream(System.Net.HttpWebRequest)" -->
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.ParseResponse(System.Net.HttpWebResponse)">
            <summary>
            Parses the response object.
            </summary>
            <param name="httpWebResponse">The Http Web Response object.</param>
            <returns>Returns the response by parsing httpWebResponse object.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.AdvancedLogger">
            <summary>
            Contains properties used to set the Logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.AdvancedLogger.RequestAdvancedLog">
            <summary>
            Gets or sets the Request logging mechanism.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.BaseUrl">
            <summary>
            Base Urls for QBO and IPS.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.Qbo">
            <summary>
            Gets or sets the url for QuickBooks Online Rest Service.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.Ips">
            <summary>
            Gets or sets the url for Platform Rest Service.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.OAuthAccessTokenUrl">
            <summary>
            Gets or sets the url for OAuth Authentication server.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.UserNameAuthentication">
            <summary>
            Gets or sets the url for UserName Authentication server.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.CompressionFormat">
            <summary>
            Format used to compress data.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.None">
            <summary>
            No compression.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.GZip">
            <summary>
            GZip compression.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.Deflate">
            <summary>
            Deflate compression.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.IppConfiguration">
            <summary>
            Ipp configuration.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.AdvancedLogger">
            <summary>
            Gets or sets the Serilog Logger mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Logger">
            <summary>
            Gets or sets the Logger mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Security">
            <summary>
            Gets or sets the Security mechanism like OAuth.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Message">
            <summary>
            Gets or sets the Message settings like Compression, Serialization.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.RetryPolicy">
            <summary>
            Gets or sets the Retry Policy used to retry service calls when Retry-able Exceptions are generated.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.BaseUrl">
            <summary>
            Gets or sets the Base Urls like Pre-Production url's.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.VerifierToken">
            <summary>
            Gets or sets the Webhooks Verifier token.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.MinorVersion">
            <summary>
            Gets or sets the minorVersion
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.IRequestResponse">
            <summary>
            Contains properties common to Request and Response.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IRequestResponse.SerializationFormat">
            <summary>
            Gets or sets the Serialization mechanism like Json, Xml.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IRequestResponse.CompressionFormat">
            <summary>
            Gets or sets the Compression Format like GZip, Deflate or None.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider">
            <summary>
            Specifies the Default Json file configuration provider implementation used by the SDK.
            By default reads "appsettings.json" file.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider.GetConfiguration">
            <summary>
            Reads the configuration from the config file and converts it to custom
            config objects which the end developer will use to get or set the properties.
            </summary>
            <returns>The custom config object.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Logger">
            <summary>
            Contains properties used to set the Logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Logger.RequestLog">
            <summary>
            Gets or sets the Request logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Logger.CustomLogger">
            <summary>
            Gets or sets the Custom logger implementation class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider">
            <summary>
            Specifies the configuration provider, that returns user provided <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/>
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider.#ctor(Intuit.Ipp.Core.Configuration.IppConfiguration)">
            <summary>
            Check given new <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/> and fill some properties if they isn't setted.
            </summary>
            <param name="cfg"></param>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider.GetConfiguration">
            <summary>
            Returns given configuration
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Message">
            <summary>
            Contains properties about the Requst and Response configuration settings.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Message.Request">
            <summary>
            Gets or sets the Request configuration settings.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Message.Response">
            <summary>
            Gets or sets the Response configuration settings.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.MinorVersion">
            <summary>
            minorVersion for QBO
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.MinorVersion.Qbo">
            <summary>
            Gets or sets the minorVersion for QuickBooks Online Rest Service.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Request">
            <summary>
            Contains properties about how to sent the request to the ids server like Compression, Serialization etc.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.RequestAdvancedLog">
            <summary>
            Contains properties used to indicate whether request and response messages are to be logged.
            </summary>
        </membe